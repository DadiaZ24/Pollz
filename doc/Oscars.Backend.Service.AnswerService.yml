### YamlMime:ManagedReference
items:
- uid: Oscars.Backend.Service.AnswerService
  commentId: T:Oscars.Backend.Service.AnswerService
  id: AnswerService
  parent: Oscars.Backend.Service
  children:
  - Oscars.Backend.Service.AnswerService.#ctor(System.String)
  - Oscars.Backend.Service.AnswerService.Create(Oscars.Backend.Dtos.AnswerDto)
  - Oscars.Backend.Service.AnswerService.Delete(System.Int32)
  - Oscars.Backend.Service.AnswerService.GetAll
  - Oscars.Backend.Service.AnswerService.GetById(System.Int32)
  - Oscars.Backend.Service.AnswerService.GetByQuestionId(System.Int32)
  - Oscars.Backend.Service.AnswerService.Update(Oscars.Backend.Dtos.AnswerDto)
  langs:
  - csharp
  - vb
  name: AnswerService
  nameWithType: AnswerService
  fullName: Oscars.Backend.Service.AnswerService
  type: Class
  source:
    remote:
      path: Backend/Service/AnswerService.cs
      branch: main
      repo: git@github.com:DadiaZ24/oscars.git
    id: AnswerService
    path: ../Backend/Service/AnswerService.cs
    startLine: 9
  assemblies:
  - Oscars
  namespace: Oscars.Backend.Service
  summary: Service for handling answer-related operations.
  example: []
  syntax:
    content: public class AnswerService
    content.vb: Public Class AnswerService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Oscars.Backend.Service.AnswerService.#ctor(System.String)
  commentId: M:Oscars.Backend.Service.AnswerService.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Oscars.Backend.Service.AnswerService
  langs:
  - csharp
  - vb
  name: AnswerService(string)
  nameWithType: AnswerService.AnswerService(string)
  fullName: Oscars.Backend.Service.AnswerService.AnswerService(string)
  type: Constructor
  source:
    remote:
      path: Backend/Service/AnswerService.cs
      branch: main
      repo: git@github.com:DadiaZ24/oscars.git
    id: .ctor
    path: ../Backend/Service/AnswerService.cs
    startLine: 9
  assemblies:
  - Oscars
  namespace: Oscars.Backend.Service
  summary: Service for handling answer-related operations.
  example: []
  syntax:
    content: public AnswerService(string connectionString)
    parameters:
    - id: connectionString
      type: System.String
    content.vb: Public Sub New(connectionString As String)
  overload: Oscars.Backend.Service.AnswerService.#ctor*
  nameWithType.vb: AnswerService.New(String)
  fullName.vb: Oscars.Backend.Service.AnswerService.New(String)
  name.vb: New(String)
- uid: Oscars.Backend.Service.AnswerService.Create(Oscars.Backend.Dtos.AnswerDto)
  commentId: M:Oscars.Backend.Service.AnswerService.Create(Oscars.Backend.Dtos.AnswerDto)
  id: Create(Oscars.Backend.Dtos.AnswerDto)
  parent: Oscars.Backend.Service.AnswerService
  langs:
  - csharp
  - vb
  name: Create(AnswerDto)
  nameWithType: AnswerService.Create(AnswerDto)
  fullName: Oscars.Backend.Service.AnswerService.Create(Oscars.Backend.Dtos.AnswerDto)
  type: Method
  source:
    remote:
      path: Backend/Service/AnswerService.cs
      branch: main
      repo: git@github.com:DadiaZ24/oscars.git
    id: Create
    path: ../Backend/Service/AnswerService.cs
    startLine: 18
  assemblies:
  - Oscars
  namespace: Oscars.Backend.Service
  summary: Creates a new answer.
  example: []
  syntax:
    content: public Answer Create(AnswerDto answersDto)
    parameters:
    - id: answersDto
      type: Oscars.Backend.Dtos.AnswerDto
      description: The answer data transfer object containing answer details.
    return:
      type: Oscars.Backend.Model.Answer
      description: The created <xref href="Oscars.Backend.Model.Answer" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Create(answersDto As AnswerDto) As Answer
  overload: Oscars.Backend.Service.AnswerService.Create*
- uid: Oscars.Backend.Service.AnswerService.GetAll
  commentId: M:Oscars.Backend.Service.AnswerService.GetAll
  id: GetAll
  parent: Oscars.Backend.Service.AnswerService
  langs:
  - csharp
  - vb
  name: GetAll()
  nameWithType: AnswerService.GetAll()
  fullName: Oscars.Backend.Service.AnswerService.GetAll()
  type: Method
  source:
    remote:
      path: Backend/Service/AnswerService.cs
      branch: main
      repo: git@github.com:DadiaZ24/oscars.git
    id: GetAll
    path: ../Backend/Service/AnswerService.cs
    startLine: 47
  assemblies:
  - Oscars
  namespace: Oscars.Backend.Service
  summary: Gets all answers.
  example: []
  syntax:
    content: public List<AnswerDto> GetAll()
    return:
      type: System.Collections.Generic.List{Oscars.Backend.Dtos.AnswerDto}
      description: A list of <xref href="Oscars.Backend.Dtos.AnswerDto" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetAll() As List(Of AnswerDto)
  overload: Oscars.Backend.Service.AnswerService.GetAll*
- uid: Oscars.Backend.Service.AnswerService.GetByQuestionId(System.Int32)
  commentId: M:Oscars.Backend.Service.AnswerService.GetByQuestionId(System.Int32)
  id: GetByQuestionId(System.Int32)
  parent: Oscars.Backend.Service.AnswerService
  langs:
  - csharp
  - vb
  name: GetByQuestionId(int)
  nameWithType: AnswerService.GetByQuestionId(int)
  fullName: Oscars.Backend.Service.AnswerService.GetByQuestionId(int)
  type: Method
  source:
    remote:
      path: Backend/Service/AnswerService.cs
      branch: main
      repo: git@github.com:DadiaZ24/oscars.git
    id: GetByQuestionId
    path: ../Backend/Service/AnswerService.cs
    startLine: 74
  assemblies:
  - Oscars
  namespace: Oscars.Backend.Service
  summary: Gets answers by question ID.
  example: []
  syntax:
    content: public List<AnswerDto> GetByQuestionId(int questionId)
    parameters:
    - id: questionId
      type: System.Int32
      description: The question ID.
    return:
      type: System.Collections.Generic.List{Oscars.Backend.Dtos.AnswerDto}
      description: A list of <xref href="Oscars.Backend.Dtos.AnswerDto" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetByQuestionId(questionId As Integer) As List(Of AnswerDto)
  overload: Oscars.Backend.Service.AnswerService.GetByQuestionId*
  nameWithType.vb: AnswerService.GetByQuestionId(Integer)
  fullName.vb: Oscars.Backend.Service.AnswerService.GetByQuestionId(Integer)
  name.vb: GetByQuestionId(Integer)
- uid: Oscars.Backend.Service.AnswerService.GetById(System.Int32)
  commentId: M:Oscars.Backend.Service.AnswerService.GetById(System.Int32)
  id: GetById(System.Int32)
  parent: Oscars.Backend.Service.AnswerService
  langs:
  - csharp
  - vb
  name: GetById(int)
  nameWithType: AnswerService.GetById(int)
  fullName: Oscars.Backend.Service.AnswerService.GetById(int)
  type: Method
  source:
    remote:
      path: Backend/Service/AnswerService.cs
      branch: main
      repo: git@github.com:DadiaZ24/oscars.git
    id: GetById
    path: ../Backend/Service/AnswerService.cs
    startLine: 102
  assemblies:
  - Oscars
  namespace: Oscars.Backend.Service
  summary: Gets an answer by its ID.
  example: []
  syntax:
    content: public AnswerDto? GetById(int answerId)
    parameters:
    - id: answerId
      type: System.Int32
      description: The answer ID.
    return:
      type: Oscars.Backend.Dtos.AnswerDto
      description: An <xref href="Oscars.Backend.Dtos.AnswerDto" data-throw-if-not-resolved="false"></xref> if found; otherwise, null.
    content.vb: Public Function GetById(answerId As Integer) As AnswerDto
  overload: Oscars.Backend.Service.AnswerService.GetById*
  nameWithType.vb: AnswerService.GetById(Integer)
  fullName.vb: Oscars.Backend.Service.AnswerService.GetById(Integer)
  name.vb: GetById(Integer)
- uid: Oscars.Backend.Service.AnswerService.Update(Oscars.Backend.Dtos.AnswerDto)
  commentId: M:Oscars.Backend.Service.AnswerService.Update(Oscars.Backend.Dtos.AnswerDto)
  id: Update(Oscars.Backend.Dtos.AnswerDto)
  parent: Oscars.Backend.Service.AnswerService
  langs:
  - csharp
  - vb
  name: Update(AnswerDto)
  nameWithType: AnswerService.Update(AnswerDto)
  fullName: Oscars.Backend.Service.AnswerService.Update(Oscars.Backend.Dtos.AnswerDto)
  type: Method
  source:
    remote:
      path: Backend/Service/AnswerService.cs
      branch: main
      repo: git@github.com:DadiaZ24/oscars.git
    id: Update
    path: ../Backend/Service/AnswerService.cs
    startLine: 129
  assemblies:
  - Oscars
  namespace: Oscars.Backend.Service
  summary: Updates an existing answer.
  example: []
  syntax:
    content: public Answer Update(AnswerDto answerDto)
    parameters:
    - id: answerDto
      type: Oscars.Backend.Dtos.AnswerDto
      description: The answer data transfer object containing updated answer details.
    return:
      type: Oscars.Backend.Model.Answer
      description: The updated <xref href="Oscars.Backend.Model.Answer" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function Update(answerDto As AnswerDto) As Answer
  overload: Oscars.Backend.Service.AnswerService.Update*
- uid: Oscars.Backend.Service.AnswerService.Delete(System.Int32)
  commentId: M:Oscars.Backend.Service.AnswerService.Delete(System.Int32)
  id: Delete(System.Int32)
  parent: Oscars.Backend.Service.AnswerService
  langs:
  - csharp
  - vb
  name: Delete(int)
  nameWithType: AnswerService.Delete(int)
  fullName: Oscars.Backend.Service.AnswerService.Delete(int)
  type: Method
  source:
    remote:
      path: Backend/Service/AnswerService.cs
      branch: main
      repo: git@github.com:DadiaZ24/oscars.git
    id: Delete
    path: ../Backend/Service/AnswerService.cs
    startLine: 152
  assemblies:
  - Oscars
  namespace: Oscars.Backend.Service
  summary: Deletes an answer by its ID.
  example: []
  syntax:
    content: public void Delete(int id)
    parameters:
    - id: id
      type: System.Int32
      description: The answer ID.
    content.vb: Public Sub Delete(id As Integer)
  overload: Oscars.Backend.Service.AnswerService.Delete*
  nameWithType.vb: AnswerService.Delete(Integer)
  fullName.vb: Oscars.Backend.Service.AnswerService.Delete(Integer)
  name.vb: Delete(Integer)
references:
- uid: Oscars.Backend.Service
  commentId: N:Oscars.Backend.Service
  href: Oscars.html
  name: Oscars.Backend.Service
  nameWithType: Oscars.Backend.Service
  fullName: Oscars.Backend.Service
  spec.csharp:
  - uid: Oscars
    name: Oscars
    href: Oscars.html
  - name: .
  - uid: Oscars.Backend
    name: Backend
    href: Oscars.Backend.html
  - name: .
  - uid: Oscars.Backend.Service
    name: Service
    href: Oscars.Backend.Service.html
  spec.vb:
  - uid: Oscars
    name: Oscars
    href: Oscars.html
  - name: .
  - uid: Oscars.Backend
    name: Backend
    href: Oscars.Backend.html
  - name: .
  - uid: Oscars.Backend.Service
    name: Service
    href: Oscars.Backend.Service.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Oscars.Backend.Service.AnswerService.#ctor*
  commentId: Overload:Oscars.Backend.Service.AnswerService.#ctor
  href: Oscars.Backend.Service.AnswerService.html#Oscars_Backend_Service_AnswerService__ctor_System_String_
  name: AnswerService
  nameWithType: AnswerService.AnswerService
  fullName: Oscars.Backend.Service.AnswerService.AnswerService
  nameWithType.vb: AnswerService.New
  fullName.vb: Oscars.Backend.Service.AnswerService.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Oscars.Backend.Model.Answer
  commentId: T:Oscars.Backend.Model.Answer
  parent: Oscars.Backend.Model
  href: Oscars.Backend.Model.Answer.html
  name: Answer
  nameWithType: Answer
  fullName: Oscars.Backend.Model.Answer
- uid: Oscars.Backend.Service.AnswerService.Create*
  commentId: Overload:Oscars.Backend.Service.AnswerService.Create
  href: Oscars.Backend.Service.AnswerService.html#Oscars_Backend_Service_AnswerService_Create_Oscars_Backend_Dtos_AnswerDto_
  name: Create
  nameWithType: AnswerService.Create
  fullName: Oscars.Backend.Service.AnswerService.Create
- uid: Oscars.Backend.Dtos.AnswerDto
  commentId: T:Oscars.Backend.Dtos.AnswerDto
  parent: Oscars.Backend.Dtos
  href: Oscars.Backend.Dtos.AnswerDto.html
  name: AnswerDto
  nameWithType: AnswerDto
  fullName: Oscars.Backend.Dtos.AnswerDto
- uid: Oscars.Backend.Model
  commentId: N:Oscars.Backend.Model
  href: Oscars.html
  name: Oscars.Backend.Model
  nameWithType: Oscars.Backend.Model
  fullName: Oscars.Backend.Model
  spec.csharp:
  - uid: Oscars
    name: Oscars
    href: Oscars.html
  - name: .
  - uid: Oscars.Backend
    name: Backend
    href: Oscars.Backend.html
  - name: .
  - uid: Oscars.Backend.Model
    name: Model
    href: Oscars.Backend.Model.html
  spec.vb:
  - uid: Oscars
    name: Oscars
    href: Oscars.html
  - name: .
  - uid: Oscars.Backend
    name: Backend
    href: Oscars.Backend.html
  - name: .
  - uid: Oscars.Backend.Model
    name: Model
    href: Oscars.Backend.Model.html
- uid: Oscars.Backend.Dtos
  commentId: N:Oscars.Backend.Dtos
  href: Oscars.html
  name: Oscars.Backend.Dtos
  nameWithType: Oscars.Backend.Dtos
  fullName: Oscars.Backend.Dtos
  spec.csharp:
  - uid: Oscars
    name: Oscars
    href: Oscars.html
  - name: .
  - uid: Oscars.Backend
    name: Backend
    href: Oscars.Backend.html
  - name: .
  - uid: Oscars.Backend.Dtos
    name: Dtos
    href: Oscars.Backend.Dtos.html
  spec.vb:
  - uid: Oscars
    name: Oscars
    href: Oscars.html
  - name: .
  - uid: Oscars.Backend
    name: Backend
    href: Oscars.Backend.html
  - name: .
  - uid: Oscars.Backend.Dtos
    name: Dtos
    href: Oscars.Backend.Dtos.html
- uid: Oscars.Backend.Service.AnswerService.GetAll*
  commentId: Overload:Oscars.Backend.Service.AnswerService.GetAll
  href: Oscars.Backend.Service.AnswerService.html#Oscars_Backend_Service_AnswerService_GetAll
  name: GetAll
  nameWithType: AnswerService.GetAll
  fullName: Oscars.Backend.Service.AnswerService.GetAll
- uid: System.Collections.Generic.List{Oscars.Backend.Dtos.AnswerDto}
  commentId: T:System.Collections.Generic.List{Oscars.Backend.Dtos.AnswerDto}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AnswerDto>
  nameWithType: List<AnswerDto>
  fullName: System.Collections.Generic.List<Oscars.Backend.Dtos.AnswerDto>
  nameWithType.vb: List(Of AnswerDto)
  fullName.vb: System.Collections.Generic.List(Of Oscars.Backend.Dtos.AnswerDto)
  name.vb: List(Of AnswerDto)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Oscars.Backend.Dtos.AnswerDto
    name: AnswerDto
    href: Oscars.Backend.Dtos.AnswerDto.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Oscars.Backend.Dtos.AnswerDto
    name: AnswerDto
    href: Oscars.Backend.Dtos.AnswerDto.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Oscars.Backend.Service.AnswerService.GetByQuestionId*
  commentId: Overload:Oscars.Backend.Service.AnswerService.GetByQuestionId
  href: Oscars.Backend.Service.AnswerService.html#Oscars_Backend_Service_AnswerService_GetByQuestionId_System_Int32_
  name: GetByQuestionId
  nameWithType: AnswerService.GetByQuestionId
  fullName: Oscars.Backend.Service.AnswerService.GetByQuestionId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Oscars.Backend.Service.AnswerService.GetById*
  commentId: Overload:Oscars.Backend.Service.AnswerService.GetById
  href: Oscars.Backend.Service.AnswerService.html#Oscars_Backend_Service_AnswerService_GetById_System_Int32_
  name: GetById
  nameWithType: AnswerService.GetById
  fullName: Oscars.Backend.Service.AnswerService.GetById
- uid: Oscars.Backend.Service.AnswerService.Update*
  commentId: Overload:Oscars.Backend.Service.AnswerService.Update
  href: Oscars.Backend.Service.AnswerService.html#Oscars_Backend_Service_AnswerService_Update_Oscars_Backend_Dtos_AnswerDto_
  name: Update
  nameWithType: AnswerService.Update
  fullName: Oscars.Backend.Service.AnswerService.Update
- uid: Oscars.Backend.Service.AnswerService.Delete*
  commentId: Overload:Oscars.Backend.Service.AnswerService.Delete
  href: Oscars.Backend.Service.AnswerService.html#Oscars_Backend_Service_AnswerService_Delete_System_Int32_
  name: Delete
  nameWithType: AnswerService.Delete
  fullName: Oscars.Backend.Service.AnswerService.Delete
